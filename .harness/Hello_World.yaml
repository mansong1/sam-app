pipeline:
  name: Hello World
  identifier: Hello_World
  projectIdentifier: Serverless
  orgIdentifier: default
  tags: {}
  stages:
    - stage:
        name: Staging
        identifier: Staging
        description: ""
        type: Deployment
        spec:
          deploymentType: AWS_SAM
          service:
            serviceRef: Hello_World
          environment:
            environmentRef: Staging
            deployToAll: false
            infrastructureDefinitions:
              - identifier: EU_London
          execution:
            steps:
              - stepGroup:
                  steps:
                    - step:
                        type: Background
                        name: dind
                        identifier: dind
                        spec:
                          connectorRef: org.Dockerhub
                          image: docker:dind
                          shell: Sh
                          privileged: true
                        when:
                          stageStatus: Success
                    - step:
                        type: DownloadManifests
                        name: DownloadManifests
                        identifier: DownloadManifests
                        spec: {}
                        when:
                          stageStatus: Success
                        timeout: 10m
                    - step:
                        type: AwsSamBuild
                        name: SAM Build
                        identifier: SAM_Build
                        spec:
                          connectorRef: org.Dockerhub
                          image: harnessdev/sam-build:1.82.0-latest
                          imagePullPolicy: IfNotPresent
                          buildCommandOptions:
                            - "--use-container"
                          samBuildDockerRegistryConnectorRef: org.Dockerhub
                          envVariables:
                            SAM_CLI_TELEMETRY: "0"
                          samVersion: 1.94.0
                        when:
                          stageStatus: Success
                        timeout: 10m
                    - step:
                        type: AwsSamDeploy
                        name: SAM Deploy
                        identifier: SAM_Deploy
                        spec:
                          connectorRef: org.Dockerhub
                          image: harnessdev/sam-deploytest:1.0.0
                          imagePullPolicy: Always
                          deployCommandOptions:
                            - "--capabilities CAPABILITY_IAM --resolve-s3 --no-fail-on-empty-changeset"
                          envVariables:
                            SAM_CLI_TELEMETRY: "0"
                            PLUGIN_AWS_SESSION_TOKEN: <+secrets.getValue("account.AWS_SESSION_TOKEN")>
                          stackName: helloworld
                          samVersion: ""
                        when:
                          stageStatus: Success
                        timeout: 10m
                  name: SAM Step Group
                  identifier: sam_step_group
                  sharedPaths:
                    - /var/run
                    - /var/lib/docker
                  stepGroupInfra:
                    type: KubernetesDirect
                    spec:
                      connectorRef: account.eksCluster
                      namespace: harness-deploy
                      serviceAccountName: mansong-sam
                      automountServiceAccountToken: true
                      harnessImageConnectorRef: account.harnessImage
            rollbackSteps: []
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
